nachos 5.0j initializing... config interrupt timerScheduling the timer interrupt handler at time = 485
 user-check grader
Running thread: main (#0)
Forking thread: idle (#1) Runnable: nachos.threads.KThread$2@2d16471f
Ready thread: idle (#1)
Enter KThread.selfTest
Forking thread: forked thread (#2) Runnable: nachos.threads.KThread$PingTest@5f934ad
Ready thread: forked thread (#2)
*** thread 0 looped 0 times
Yielding thread: main (#0)
Ready thread: main (#0)
Switching from: main (#0) to: forked thread (#2)
Beginning thread: forked thread (#2)
Running thread: forked thread (#2)
*** thread 1 looped 0 times
Yielding thread: forked thread (#2)
Ready thread: forked thread (#2)
Switching from: forked thread (#2) to: main (#0)
Running thread: main (#0)
*** thread 0 looped 1 times
Yielding thread: main (#0)
Ready thread: main (#0)
Switching from: main (#0) to: forked thread (#2)
Running thread: forked thread (#2)
*** thread 1 looped 1 times
Yielding thread: forked thread (#2)
Ready thread: forked thread (#2)
Switching from: forked thread (#2) to: main (#0)
Running thread: main (#0)
*** thread 0 looped 2 times
Yielding thread: main (#0)
Ready thread: main (#0)
Switching from: main (#0) to: forked thread (#2)
Running thread: forked thread (#2)
*** thread 1 looped 2 times
Yielding thread: forked thread (#2)
Ready thread: forked thread (#2)
Switching from: forked thread (#2) to: main (#0)
Running thread: main (#0)
Joining to thread: forked thread (#2)
this.status: 1
Yielding thread: main (#0)
Ready thread: main (#0)
Switching from: main (#0) to: forked thread (#2)
Running thread: forked thread (#2)
Finishing thread: forked thread (#2)
Sleeping thread: forked thread (#2)
Switching from: forked thread (#2) to: main (#0)
Running thread: main (#0)
waked up ...
Forking thread: ping (#3) Runnable: nachos.threads.Semaphore$PingTest@bd05c81
Ready thread: ping (#3)
Sleeping thread: main (#0)
Switching from: main (#0) to: ping (#3)
Beginning thread: ping (#3)
Running thread: ping (#3)
Ready thread: main (#0)
Sleeping thread: ping (#3)
Switching from: ping (#3) to: main (#0)
Running thread: main (#0)
Ready thread: ping (#3)
Sleeping thread: main (#0)
Switching from: main (#0) to: ping (#3)
Running thread: ping (#3)
Ready thread: main (#0)
Sleeping thread: ping (#3)
Switching from: ping (#3) to: main (#0)
Running thread: main (#0)
Ready thread: ping (#3)
Sleeping thread: main (#0)
Switching from: main (#0) to: ping (#3)
Running thread: ping (#3)
Ready thread: main (#0)
Sleeping thread: ping (#3)
Switching from: ping (#3) to: main (#0)
Running thread: main (#0)
Ready thread: ping (#3)
Sleeping thread: main (#0)
Switching from: main (#0) to: ping (#3)
Running thread: ping (#3)
Ready thread: main (#0)
Sleeping thread: ping (#3)
Switching from: ping (#3) to: main (#0)
Running thread: main (#0)
Ready thread: ping (#3)
Sleeping thread: main (#0)
Switching from: main (#0) to: ping (#3)
Running thread: ping (#3)
Ready thread: main (#0)
Sleeping thread: ping (#3)
Switching from: ping (#3) to: main (#0)
Running thread: main (#0)
Ready thread: ping (#3)
Sleeping thread: main (#0)
Switching from: main (#0) to: ping (#3)
Running thread: ping (#3)
Ready thread: main (#0)
Sleeping thread: ping (#3)
Switching from: ping (#3) to: main (#0)
Running thread: main (#0)
Ready thread: ping (#3)
Sleeping thread: main (#0)
Switching from: main (#0) to: ping (#3)
Running thread: ping (#3)
Ready thread: main (#0)
Sleeping thread: ping (#3)
Switching from: ping (#3) to: main (#0)
Running thread: main (#0)
Ready thread: ping (#3)
Sleeping thread: main (#0)
Switching from: main (#0) to: ping (#3)
Running thread: ping (#3)
Ready thread: main (#0)
Sleeping thread: ping (#3)
Switching from: ping (#3) to: main (#0)
Running thread: main (#0)
Ready thread: ping (#3)
Sleeping thread: main (#0)
Switching from: main (#0) to: ping (#3)
Running thread: ping (#3)
Ready thread: main (#0)
Sleeping thread: ping (#3)
Switching from: ping (#3) to: main (#0)
Running thread: main (#0)
Ready thread: ping (#3)
Invoking interrupt handlers at time = 490
  timer
Scheduling the timer interrupt handler at time = 1013
Scheduling the timerAG interrupt handler at time = 491
Yielding thread: main (#0)
Ready thread: main (#0)
Switching from: main (#0) to: ping (#3)
Running thread: ping (#3)
Invoking interrupt handlers at time = 500
  timerAG
  (end of list)
Finishing thread: ping (#3)
Sleeping thread: ping (#3)
Switching from: ping (#3) to: main (#0)
Running thread: main (#0)
  (end of list)
Forking thread: ping (#4) Runnable: nachos.threads.SynchList$PingTest@5b2558d6
Ready thread: ping (#4)
Sleeping thread: main (#0)
Switching from: main (#0) to: ping (#4)
Beginning thread: ping (#4)
Running thread: ping (#4)
Ready thread: main (#0)
Sleeping thread: ping (#4)
Switching from: ping (#4) to: main (#0)
Running thread: main (#0)
Ready thread: ping (#4)
Sleeping thread: main (#0)
Switching from: main (#0) to: ping (#4)
Running thread: ping (#4)
Ready thread: main (#0)
Sleeping thread: ping (#4)
Switching from: ping (#4) to: main (#0)
Running thread: main (#0)
Ready thread: ping (#4)
Sleeping thread: main (#0)
Switching from: main (#0) to: ping (#4)
Running thread: ping (#4)
Ready thread: main (#0)
Sleeping thread: ping (#4)
Switching from: ping (#4) to: main (#0)
Running thread: main (#0)
Ready thread: ping (#4)
Invoking interrupt handlers at time = 1020
  timer
Scheduling the timer interrupt handler at time = 1524
Scheduling the timerAG interrupt handler at time = 1021
Yielding thread: main (#0)
Ready thread: main (#0)
Switching from: main (#0) to: ping (#4)
Running thread: ping (#4)
Invoking interrupt handlers at time = 1030
  timerAG
  (end of list)
Sleeping thread: ping (#4)
Switching from: ping (#4) to: main (#0)
Running thread: main (#0)
  (end of list)
Ready thread: ping (#4)
Sleeping thread: main (#0)
Switching from: main (#0) to: ping (#4)
Running thread: ping (#4)
Ready thread: main (#0)
Sleeping thread: ping (#4)
Switching from: ping (#4) to: main (#0)
Running thread: main (#0)
Ready thread: ping (#4)
Sleeping thread: main (#0)
Switching from: main (#0) to: ping (#4)
Running thread: ping (#4)
Ready thread: main (#0)
Sleeping thread: ping (#4)
Switching from: ping (#4) to: main (#0)
Running thread: main (#0)
Ready thread: ping (#4)
Sleeping thread: main (#0)
Switching from: main (#0) to: ping (#4)
Running thread: ping (#4)
Ready thread: main (#0)
Sleeping thread: ping (#4)
Switching from: ping (#4) to: main (#0)
Running thread: main (#0)
Ready thread: ping (#4)
Invoking interrupt handlers at time = 1530
  timer
Scheduling the timer interrupt handler at time = 2052
Scheduling the timerAG interrupt handler at time = 1531
Yielding thread: main (#0)
Ready thread: main (#0)
Switching from: main (#0) to: ping (#4)
Running thread: ping (#4)
Invoking interrupt handlers at time = 1540
  timerAG
  (end of list)
Sleeping thread: ping (#4)
Switching from: ping (#4) to: main (#0)
Running thread: main (#0)
  (end of list)
Ready thread: ping (#4)
Sleeping thread: main (#0)
Switching from: main (#0) to: ping (#4)
Running thread: ping (#4)
Ready thread: main (#0)
Sleeping thread: ping (#4)
Switching from: ping (#4) to: main (#0)
Running thread: main (#0)
Ready thread: ping (#4)
Sleeping thread: main (#0)
Switching from: main (#0) to: ping (#4)
Running thread: ping (#4)
Ready thread: main (#0)
Sleeping thread: ping (#4)
Switching from: ping (#4) to: main (#0)
Running thread: main (#0)
Ready thread: ping (#4)
Sleeping thread: main (#0)
Switching from: main (#0) to: ping (#4)
Running thread: ping (#4)
Ready thread: main (#0)
Invoking interrupt handlers at time = 2060
  timer
Scheduling the timer interrupt handler at time = 2550
Scheduling the timerAG interrupt handler at time = 2061
Yielding thread: ping (#4)
Ready thread: ping (#4)
Switching from: ping (#4) to: main (#0)
Running thread: main (#0)
Invoking interrupt handlers at time = 2070
  timerAG
  (end of list)
Sleeping thread: main (#0)
Switching from: main (#0) to: ping (#4)
Running thread: ping (#4)
  (end of list)
Ready thread: main (#0)
Finishing thread: ping (#4)
Sleeping thread: ping (#4)
Switching from: ping (#4) to: main (#0)
Running thread: main (#0)
Machine halting!

Ticks: total 2100, kernel 2100, user 0
Disk I/O: reads 0, writes 0
Console I/O: reads 0, writes 0
Paging: page faults 0, TLB misses 0
Network I/O: received 0, sent 0
